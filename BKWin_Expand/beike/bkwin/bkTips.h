// This file was generated by WTL subclass control wizard 
// CustomTips.h : Declaration of the CBkTips

#pragma once
#include <atlcrack.h>
#include <atlmisc.h>

// CBkTips

class CBkTips :
	public CWindowImpl<CBkTips>
{
public:
	CBkTips();
	~CBkTips();

    DECLARE_WND_CLASS(_T("CBkTips"))

	enum CustomTipsPos
	{
		eCTTS_POS_Left,//左
		eCTTS_POS_Right,//右
		eCTTS_POS_Bottom,//底
		eCTTS_POS_Top//顶
	};


	enum CustomTipsAlign
	{
		eCTTS_Align_Normal,//正常对齐
		eCTTS_Align_Reverse//反向对齐
	};

	enum CustomTipsStyle
	{
		eCTTS_Style_border=1,//显示边框
		eCTTS_Style_arrow=2//显示箭头
	};

	 bool ShowTips(HWND hParent,//父窗口
		POINT pt,//父窗口的相对坐标
		LPCWSTR szText//显示文字
		);//显示

	 void SetPosAlign(CustomTipsPos position,CustomTipsAlign align);//显示位置，可根据CustomTipsPos枚举参数设定,默认是上方
	 void HideTips();//隐藏提示条

	 void SetWidth(int nTipsWidth);//设置提示条宽度，nTipsWidth==-1时，为单行显示

	 void SetBGImage(LPCWSTR szPNGPathName,LPCWSTR szArrowPathName);//背景PNG图像位置,如果szPNGPathName或szArrowPathName为NULL，取消背景图像

	 void SetBorderColor(COLORREF clrOut,COLORREF clrIn);
    

	 void ModifyTipsStyle(UINT uiAddStyle,UINT uiRemoveStyle);//参考CustomTipsStyle风格
	 UINT GetStyle();//获得提示条风格

	 void SetDelayTime(int nDelayTimes);		//单位：毫秒。持续显示时间,nDelayTimes==-1时提示条一直显示
	 void SetMargins(UINT nWidth,UINT nHeight ); //设置文字位于Tips的Margins

	//clr 字体颜色
	//nPointSize,参数含义与API CreatePointFont 的nPointSize一致
	//szFaceName,参数含义与API CreatePointFont 的lpszFaceName一致
	 void SetTextStyle( COLORREF clr,int nPointSize,LPCWSTR szFaceName);
 

	 void SetArrowSize(SIZE sizeArrow);//设置每个小箭头的大小
 

protected:
	int m_nDelayTime;
	int m_nStyle;
	int m_nTextWidth;
	CustomTipsPos m_enumPosition;
	CustomTipsAlign m_enumAlign;

	CStringW m_strBGPath;
	CStringW m_strArrowPath;
	int m_nMarginWidth;
	int m_nMarginHeight;
	COLORREF m_clrTextColor;

	CStringW m_strText;
	
	CFont m_font;
	CBrush m_brBorderOut;
	CBrush m_brBorderIn;

	CRgn m_rgn;

	CRgn m_rgnArrow[4];
	CPoint m_ptTextStart;
	CSize m_sizeArrow;

	static void InflateRgn(CRgn & srcRgn,CRgn & desRgn);
    static void CopyRgn(CRgn& srcRgn, CRgn& desRgn);

    BEGIN_MSG_MAP(CBkTips)
        MSG_WM_TIMER(OnTimer)
        MSG_WM_LBUTTONDOWN(OnLButtonDown)
        MSG_WM_PAINT(OnPaint)
    END_MSG_MAP()

	void CreateRgnFromPNG( LPCWSTR szPNGName,POINT ptImage,SIZE sizeImage,BYTE byAlpha,CRgn * outRgn);
	void CalTextSize(CDC & dc,LPCWSTR szText,CSize * pOutSize);
	void DrawBgAndText(CDC & dc);
	BOOL PtInWindow();

	void GetWndRectTop( const SIZE & srcSize,const POINT & srcPoint,CSize * pOutSize,CPoint * pOutPoint,CRgn * pOutRgn);
	void GetWndRectBottom( const SIZE & srcSize,const POINT & srcPoint,CSize * pOutSize,CPoint * pOutPoint,CRgn * pOutRgn);
	void GetWndRectRight( const SIZE & srcSize,const POINT & srcPoint,CSize * pOutSize,CPoint * pOutPoint,CRgn * pOutRgn);
	void GetWndRectLeft( const SIZE & srcSize,const POINT & srcPoint,CSize * pOutSize,CPoint * pOutPoint,CRgn * pOutRgn);
	typedef void (CBkTips::*fGetWndRectType)(  const SIZE & srcSize,const POINT & srcPoint,CSize * pOutSize,CPoint * pOutPoint,CRgn * pOutRgn);
	fGetWndRectType PolicyWndRect();
	void GetArrowRgn(CustomTipsPos enumPos,CRgn * poutRgn);
	void DrawText(CDC & dc,CRect &rc,COLORREF clr );
    void CheckCreateDefFont();

	LRESULT OnLButtonDown(UINT Flags, CPoint Pt);
	LRESULT OnPaint(HDC hdc);
	LRESULT OnTimer(UINT_PTR id);

    static CBkTips* GetTipObjFromHwnd(HWND hWnd);
    static LRESULT CALLBACK TipParentProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);
    LRESULT TipParentProcFilter(UINT message, WPARAM wParam, LPARAM lParam);

private:
	const static int cs_nAdditionLen=1;//提示条正文附加长度
	const static int cs_nArrowPos=16;//小箭头相对于提示正文的位置
	const static int cs_nMaxHeight=1000;//Tips最大高度
	const static int cs_nRoundRect=2;//圆角半径
	const static COLORREF m_clrBorderOut=RGB(0xd3,0x9A,0x74);
	const static COLORREF m_clrBorderIn=RGB(0xff,0xf7,0xe7);
    WNDPROC m_ProcOld;
    HWND m_hParent;
};

#include "bkTips.inl"
